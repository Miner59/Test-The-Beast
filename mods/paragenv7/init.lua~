-- paragenv7 0.4.1 by paramat
-- For latest stable Minetest and back to 0.4.8
-- Depends default
-- Licenses: code WTFPL, textures CC BY-SA

-- vary ice thickness
-- flora noise makes paths, does not vary density

-- Parameters

local YSAV = 4 -- Average sandline y, dune grasses above this
local SAMP = 5 -- Sandline amplitude
local BERGDEP = 24 -- Maximum iceberg depth

local HITET = 0.35 -- High temperature threshold
local LOTET = -0.35 -- Low ..
local ICETET = -0.7 -- Ice ..
local HIHUT = 0.35 -- High humidity threshold
local LOHUT = -0.35 -- Low ..
local BLEND = 0.2 -- Biome blend randomness

local PINCHA = 1 / ( 7 + ( 12 / math.max(0.03,math.random()*math.random()))) -- Pine tree 1/x chance per surface node
local APTCHA = 1 / ( ( 20 / math.max(0.03,math.random()*math.random()*math.random()))) -- Appletree max chance
local FLOCHA = 1 / ( ( 290 / math.max(0.03,math.random()*math.random()*math.random()))) -- Flower
local GRACHA = 1 / ( ( 6 / math.max(0.03,math.random()*math.random()*math.random()))) -- Grasses
local JUTCHA = 1 / ( ( 20 / math.max(0.03,1 - math.max(0.03,math.random()*math.random()*math.random())))) -- Jungletree
local JUGCHA = 1 / ( ( 5 / math.max(0.03,math.random()*math.random()*math.random()))) -- Junglegrass
local CACCHA = 1 / ( ( 355 / math.max(0.03,math.random()*math.random()*math.random()))) -- Cactus
local DRYCHA = 1 / ( ( 45 / math.max(0.03,math.random()*math.random()*math.random()))) -- Dry shrub
local ACACHA = 1 / ( ( 140 / math.max(0.03,math.random()*math.random()*math.random()))) -- Acacia tree
local GOGCHA = 1 / ( ( 8 / math.max(0.03,math.random()*math.random()))) -- Golden savanna grass
local PAPCHA = 1 / ( 10 + ( 4 / math.max(0.03,math.random()*math.random()*math.random()))) -- Papyrus
local DUGCHA = 1 / ( ( 5 / math.max(0.03,math.random()*math.random()))) -- Dune grass

-- 2D noise for temperature

local np_temp = {
	offset = 0,
	scale = 1,
	spread = {x=512, y=512, z=512},
	seed = 9130,
	octaves = 3,
	persist = 0.5
}

-- 2D noise for humidity

local np_humid = {
	offset = 0,
	scale = 2,
	spread = {x=512, y=512, z=512},
	seed = -5500,
	octaves = 3,
	persist = 0.5
}

-- 2D noise for flora / sandline / icesheet depth

local np_flora = {
	offset = 0,
	scale = 1,
	spread = {x=128, y=128, z=128},
	seed = 777001,
	octaves = 3,
	persist = 0.5
}

-- Stuff

paragenv7 = {}

dofile(minetest.get_modpath("paragenv7").."/nodes.lua")
dofile(minetest.get_modpath("paragenv7").."/functions.lua")

-- On generated function

minetest.register_on_generated(function(minp, maxp, seed)
	if minp.y < -32 or minp.y > 338 then
		return
	end
	
	local t1 = os.clock()
	local x1 = maxp.x
	local y1 = maxp.y
	local z1 = maxp.z
	local x0 = minp.x
	local y0 = minp.y
	local z0 = minp.z
	if x0==-32 and y0==-32 and z0==-112 and seed==1697547653 then return false end --HACK TO PLAY WITH A CORRUPT MAP
	print ("[paragenv7] chunk minp ("..x0.." "..y0.." "..z0..")")
	
	local vm, emin, emax = minetest.get_mapgen_object("voxelmanip")
	local area = VoxelArea:new{MinEdge=emin, MaxEdge=emax}
	local data = vm:get_data()
	
	local c_ignore = minetest.get_content_id("ignore")
	local c_air = minetest.get_content_id("air")
	local c_dirt = minetest.get_content_id("default:dirt")
	local c_sand = minetest.get_content_id("default:sand")
	local c_desertsand = minetest.get_content_id("default:desert_sand")
	local c_snowblock = minetest.get_content_id("default:snowblock")
	local c_ice = minetest.get_content_id("default:ice")
	local c_dirtsnow = minetest.get_content_id("default:dirt_with_snow")
	local c_jungrass = minetest.get_content_id("default:junglegrass")
	local c_dryshrub = minetest.get_content_id("default:dry_shrub")
	local c_clay = minetest.get_content_id("default:clay")
	local c_cobble = minetest.get_content_id("default:cobble")
	local c_mossycobble = minetest.get_content_id("default:mossycobble")
	local c_stone = minetest.get_content_id("default:stone")
	local c_desertstone = minetest.get_content_id("default:desert_stone")
	local c_stonecopper = minetest.get_content_id("default:stone_with_copper")
	local c_stoneiron = minetest.get_content_id("default:stone_with_iron")
	local c_stonecoal = minetest.get_content_id("default:stone_with_coal")
	local c_water = minetest.get_content_id("default:water_source")


	local c_pg7dirt = minetest.get_content_id("default:dirt")
	local c_pg7grass = minetest.get_content_id("default:dirt_with_grass")
	local c_pg7drygrass = minetest.get_content_id("paragenv7:drygrass")
	local c_pg7permafrost = minetest.get_content_id("paragenv7:permafrost")
	local c_pg7goldengrass = minetest.get_content_id("paragenv7:goldengrass")
	
	local sidelen = x1 - x0 + 1
	local chulens = {x=sidelen, y=sidelen, z=sidelen}
	local minposxz = {x=x0, y=z0}
	
	local nvals_temp = minetest.get_perlin_map(np_temp, chulens):get2dMap_flat(minposxz)
	local nvals_humid = minetest.get_perlin_map(np_humid, chulens):get2dMap_flat(minposxz)
	local nvals_flora = minetest.get_perlin_map(np_flora, chulens):get2dMap_flat(minposxz)
	
	local nixz = 1
	for z = z0, z1 do
	for x = x0, x1 do -- for each column do
		local n_temp = nvals_temp[nixz] -- select biome
		local n_humid = nvals_humid[nixz]
		local biome = false
		if n_temp < LOTET - math.random() * BLEND then
			if n_humid < LOHUT - math.random() * BLEND then
				biome = 1 -- tundra
			elseif n_humid > HIHUT + math.random() * BLEND then
				biome = 3 -- taiga
			else
				biome = 2 -- snowplains
			end
		elseif n_temp > HITET + math.random() * BLEND then
			if n_humid < LOHUT - math.random() * BLEND then
				biome = 7 -- desert
			elseif n_humid > HIHUT + math.random() * BLEND then
				biome = 9 -- rainforest
			else
				biome = 8 -- savanna
			end
		else
			if n_humid < LOHUT - math.random() * BLEND then
				biome = 4 -- dry grassland
			elseif n_humid > HIHUT + math.random() * BLEND then
				biome = 6 -- deciduous forest
			else
				biome = 5 -- grassland
			end
		end
		

		local n_flora = nvals_flora[nixz]
		local f=0
		local n_absflora = math.abs(n_flora)
		local sandy = YSAV + n_flora * SAMP + math.random(0, 1) -- sandline
		local bergdep = n_absflora * BERGDEP -- iceberg depth
		local open = true -- open to sky?
		local solid = true -- solid node above?
		local water = false -- water node above?
		local surfy = y1 + 80 -- y of last surface detected
		for y = y1, y0, -1 do -- working down each column for each node do
			local vi = area:index(x, y, z)
			if data[vi]==c_air or data[vi]==c_water then

			local fimadep = math.floor((math.floor(6 - y / 16) -f+ math.random(0, 1)+math.abs(math.floor((z-766-math.abs(math.floor((z-766)/1000)*1000))/167+(x-187-math.abs(math.floor((x-187)/3000)*3000))/216)))/3)+2
			local viuu = area:index(x, y - 2, z)
			local nodiduu = data[viuu]
			local viu = area:index(x, y - 1, z)
			local nodid = data[viu]
			if nodid == c_stone -- if stone
			or nodid == c_pg7grass
			or nodid == c_stonecopper
			or nodid == c_desertstone
			or nodid == c_desertsand
			or nodid == c_sand
			or nodid == c_dirt
			or nodid == c_stoneiron
			or nodid == c_stonecoal 
			or ((nodid == c_mossycobble
			or nodid == c_cobble)
			and y<27)
			then
				if biome == 7 then
if nodiduu ~= c_water and nodiduu ~= c_air and nodid ~= c_water and nodid ~= c_air and fimadep>1 then
					data[vi] = c_desertstone
else
					data[vi] = c_desertsand
end
if (data[viu] == c_pg7grass or data[viu] == c_dirt) then
	data[viu] = c_desertstone
if (data[viuu] == c_pg7grass or data[viuu] == c_dirt) then
	data[viuu] = c_desertstone
end
end
 				end

				if fimadep>1 or open or nodid == c_pg7grass then -- if surface
					surfy = y
					if nodid == c_pg7grass or (nodiduu ~= c_water and nodiduu ~= c_air and nodid ~= c_water and nodid ~= c_air and fimadep>1) then -- if supported by 2 stone nodes

						if y <= sandy then -- sand
							if math.abs(n_temp) < 0.05 and y == -1 then -- clay
								data[vi] = c_clay
if data[viu] == c_pg7grass then

								data[viu] = c_clay
else
								data[viu] = c_sand
end
								viu = area:index(x, y - 2, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-2, z)
									if data[viu] == c_air then
data[vi] = c_sand
 break
 end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									data[vi] = c_sand
								end								
							else
								data[vi] = c_sand
								viu = area:index(x, y - 1, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-1, z)
									if data[viu] == c_air then
data[vi] = c_sand
break
end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									data[vi] = c_sand
								end								
							end
							if open and water and y == 0 and biome >= 7
							and math.random() < n_absflora * PAPCHA then -- papyrus
								paragenv7_papyrus(x, 0, z, area, data)
							elseif open and y >= 4 + math.random() and biome >= 4
							and math.random() < n_absflora * DUGCHA then -- dune grass

								local vi = area:index(x, y + 1, z)
								data[vi] = c_pg7goldengrass
							elseif open and y >= 1 and (biome == 2 or biome == 3) then -- snowy beach
								local vi = area:index(x, y + 1, z)

								data[vi] = c_snowblock
if (data[viu] == c_pg7grass or data[viu] == c_dirt) and math.random(1,3)<3 then						
								data[viu] = c_snowblock
end
if (data[viu] == c_pg7grass or data[viu] == c_dirt) and math.random(1,4)==4 then						
	data[viuu] = c_snowblock
end

							end
						else -- above sandline
							if biome == 1 then


								if math.random(121) == 2 then
									data[vi] = c_ice
								elseif math.random(25) == 2 then

									data[vi] = c_dirtsnow
								else
									data[vi] = c_pg7drygrass
								end
								local dpp=fimadep/8
								viu = area:index(x, y - 1, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-1, z)
									if data[viu] == c_air then break end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									if math.random(87) == 2 then
										data[vi] = c_ice
									elseif ct>dpp then 
										data[vi] = c_dirt
									else
										data[vi] = c_pg7drygrass
									end
								end								

							elseif biome == 4 or biome == 8 then
								local dpp=fimadep/5
								data[vi] = c_pg7drygrass
								viu= area:index(x, y - 1, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-1, z)
									if data[viu] == c_air then break end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									if ct>dpp then 
										data[vi] = c_dirt
									else
										data[vi] = c_pg7drygrass
									end
								end								

							elseif biome == 2 or biome == 3 then
if n_temp > LOTET-BLEND+BLEND/7 then
data[vi] = c_dirtsnow
vi = area:index(x, y - 1, z)
data[vi] = c_dirt
else
								vi = area:index(x, y - 1, z)
								data[vi] = c_snowblock
end
								viu = area:index(x, y - 2, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-2, z)
									if data[viu] == c_air then 
break 
end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									data[vi] = c_dirt
								end								
							elseif biome == 7 then
								data[vi] = c_desertsand
								data[viu] = c_desertsand
								viu = area:index(x, y - 2, z)
								for ct=1,fimadep*2,1 do
									vi=viu
									viu = area:index(x, y - ct-2, z)
if ct>fimadep then
data[vi] = c_desertstone
else
if math.random(3,8)+ct>9 then						
data[vi] = c_sand
else	
data[vi] = c_desertsand
end
end
if data[viu] == c_air then break end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									if (data[vi] == c_pg7grass or data[viu] == c_dirt) and math.random(3,8)+ct>9 then						
										data[vi] = c_sand
									else	
										data[vi] = c_desertsand
									end
								end								

							elseif f>0 then
								data[vi] = c_pg7dirt
								viu = area:index(x, y - 1, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-1, z)
									if data[viu] == c_air then break end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									data[vi] = c_pg7dirt
								end								

							else
								data[vi] = c_pg7grass
if f<15 then f=f+1 end
if data[viu] == c_pg7grass then
data[viu] = c_dirt
else
								viu = area:index(x, y - 1, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-1, z)
									if data[viu] == c_air then break end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
									data[vi] = c_dirt
								end								
end


							end
							if open then -- if open to sky then flora
								local y = surfy + 1

								local vi = area:index(x, y, z)
								if biome == 1 then
									if math.random() < DRYCHA then
										data[vi] = c_dryshrub
									end
								elseif biome == 2 then
if n_temp<LOTET-BLEND+BLEND*(math.random()/7)then 

									data[vi] = c_snowblock
									vi = area:index(x, y - 1, z)
									data[vi] = c_snowblock
									viu = area:index(x, y - 2, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-2, z)
									if data[viu] == c_air then break end
									if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
if ct==1 then
										data[vi] = c_dirtsnow
else
										data[vi] = c_dirt
end
end								
else
									vi = area:index(x, y - 1, z)
									data[vi] = c_dirtsnow

end
								elseif biome == 3 then
if n_temp<LOTET-BLEND+BLEND*(math.random()/7) then 
									if math.random() < PINCHA and n_absflora > 0.1 then
										paragenv7_pinetree(x, y, z, area, data)
									else
										data[vi] = c_snowblock
								vi = area:index(x, y - 1, z)
								data[vi] = c_snowblock
								viu = area:index(x, y - 2, z)
								for ct=1,fimadep,1 do
									vi=viu
									viu = area:index(x, y - ct-2, z)
									if data[viu] == c_air then 

break
end
										if data[vi] == c_mossycobble or data[vi] == c_cobble then break end
if ct==1 then
										data[vi] = c_dirtsnow
else
										data[vi] = c_dirt
end
end
									end								
else
									if math.random()*2 < PINCHA and n_absflora > 0.1 then
if n_temp>LOTET-BLEND+BLEND*(math.random()/2) then 
if math.random(1,9)>8 then
										paragenv7_pinetree(x, y, z, area, data,"default:snow")
end
else
										paragenv7_pinetree(x, y, z, area, data)
end
else
									vi = area:index(x, y - 1, z)
									data[vi] = c_dirtsnow
end
									end
								elseif biome == 4 then
									if math.random() < DRYCHA then
										data[vi] = c_dryshrub
									end
								elseif biome == 5 then
									if math.random() < FLOCHA then
										paragenv7_flower(data, vi)
									elseif math.random() < GRACHA then
										paragenv7_grass(data, vi)
									end
								elseif biome == 6 then
									if math.random() < APTCHA and n_absflora > 0.1 then
										paragenv7_appletree(x, y, z, area, data)
									elseif math.random() < GRACHA then
										paragenv7_grass(data, vi)
									end
								elseif biome == 7 then
									if math.random() < CACCHA then
										paragenv7_cactus(x, y, z, area, data)
									elseif math.random() < DRYCHA then
										data[vi] = c_dryshrub
									end
								elseif biome == 8 then
									if math.random() < ACACHA then
										paragenv7_acaciatree(x, y, z, area, data)
									elseif math.random() < GOGCHA then
										data[vi] = c_pg7goldengrass
									end
								elseif biome == 9 then
									if math.random() < JUTCHA then
										paragenv7_jungletree({x=x, y=y, z=z}, area, data)
									elseif math.random() < JUGCHA then
										data[vi] = c_jungrass
									end
								end
							end
						end
					end
if f<15 then f=f+1 end
				else -- underground
					if nodiduu ~= c_water and surfy - y + 1 <= fimadep then
						if y <= sandy then
							data[vi] = c_sand
						elseif biome == 1 then
							if math.random(121) == 2 then
								data[vi] = c_ice
							else
								data[vi] = c_pg7permafrost
							end
						elseif biome == 7 then
							data[vi] = c_desertsand
						else
							data[vi] = c_dirt
if (data[viu] == c_pg7grass or data[viu] == c_dirt) and math.random(1,4)<4 then						
	data[viu] = c_dirt
if (data[viu] == c_pg7grass or data[viu] == c_dirt) and math.random(1,3)<3 then						
	data[viuu] = c_dirt
end
end

						end
					end
				end
				open = false
				solid = true
			elseif nodid == c_air or nodid == c_water then
				solid = false
				if nodid == c_water then
					water = true
					if y >= 1 - bergdep and y <= 1 + bergdep / 8 and n_temp < ICETET then-- icesheet
						data[vi] = c_ice
					end
				end
			end
			end
		end
		nixz = nixz + 1
	end	
	end
	
	vm:set_data(data)
	vm:set_lighting({day=0, night=0})
	vm:calc_lighting()
	vm:write_to_map(data)
	local chugent = math.ceil((os.clock() - t1) * 1000)
	print ("[paragenv7] "..chugent.." ms")			
end)	
